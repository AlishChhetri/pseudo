[tool.poetry]
name = "pseudo"
version = "0.1.0"
description = "Smart content router for AI-generated text, images, and audio"
authors = ["Alish Chhetri <chhetri01@allegheny.edu>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "pseudo" }
]

[tool.poetry.scripts]
pseudo = "pseudo.core.app:main"

[tool.poetry.dependencies]
python = "^3.12"
flask = "^3.0.0"
requests = "^2.32.0"
pillow = "^11.1.0"
python-dotenv = "^1.0.1"

# Local dependency on apicenter
# Using a relative path means it will work when cloned as sibling directories
apicenter = { path = "../apicenter", develop = true }

# Dependencies for various providers
openai = "^1.69.0"
anthropic = "^0.49.0"
elevenlabs = "^1.55.0"
stability-sdk = "^0.8.6"

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
flake8 = "^7.0.0"
pytest = "^8.0.0"
ruff = "^0.5.0"
taskipy = "^1.8.1"
mypy = "^1.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "^v(?P<base>\\d+\\.\\d+\\.\\d+)(?P<stage>alpha|beta|rc)?(?P<rev>\\d+)?$"

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]  # Ignore line length errors for now

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F401"]  # Allow unused imports in test files
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files 